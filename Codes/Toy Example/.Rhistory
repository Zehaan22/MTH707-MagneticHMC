density2 <- matrix(rnorm(2*5e4 , mean = 5), ncol = 2)
density_df <- as.data.frame(rbind(density1, density2))
colnames(density_df) <- c("x", "y")
## Plotting the trajectory
plot.gg <- ggplot() +
stat_density_2d(data = density_df, aes(x = x, y = y, fill = after_stat(level)), geom = "polygon", alpha = 0.3) +
scale_fill_viridis_c(option = "magma") +
theme_void() +  # Removes background grid and axes
theme(legend.position = "bottom",
legend.title = element_blank())  # Removes legend title
plot.gg
## Generating Trajectory points
n = 1e4
k = 2
L = 40
eps = 0.2
temp_min = 1
mean1 <- c(0,0)
mean2 <- c(5,5)
# Current State with a new momentum sample
p <- rnorm(2)
qt <- matrix(0, nrow = L+1, ncol = k)
qt[1,] <- c(0, 0)
count <- 2
## Adding the point to the plot
plot.gg <- plot.gg + geom_point(aes(x = qt[1,1], y = qt[1,2]), size = 3, shape = 21, fill = "lightgreen")
plot.gg
## Temperatures
temps <- seq(
from = temp_min,
to = 1,
length = L/2)
# Taking the "Repulsive" steps
for(i in 1:length(temps)){
ret <- conformalLF(p,qt[count-1,],eps,temps[length(temps) - i + 1])
p <- ret[[1]]
qt[count,] <- ret[[2]]
count <- count + 1
}
# Taking the "Attractive" steps
for(i in 1:length(temps)){
ret <- conformalLF(p,qt[count-1,],eps,temps[i])
p <- ret[[1]]
qt[count,] <- ret[[2]]
count <- count + 1
}
# Making the final plot
plot.gg <- plot.gg +
geom_point(aes(x = qt[2:L+1,1], y = qt[2:L+1,2]), size = 3, shape = 21, fill = "white")+
geom_path(aes(x = qt[1:L+1,1], y = qt[1:L+1,2]), linewidth = 2,  color = "coral")
plot.gg
## Making the plot for the trajectory of the particle
# libraries
library(ggplot2)
# Code
source("Algorithm.R")
## Plotting the ground truth
density1 <- matrix(rnorm(2*5e4 , mean = 0), ncol = 2)
density2 <- matrix(rnorm(2*5e4 , mean = 5), ncol = 2)
density_df <- as.data.frame(rbind(density1, density2))
colnames(density_df) <- c("x", "y")
## Plotting the trajectory
plot.gg <- ggplot() +
stat_density_2d(data = density_df, aes(x = x, y = y, fill = after_stat(level)), geom = "polygon", alpha = 0.3) +
scale_fill_viridis_c(option = "magma") +
theme_void() +  # Removes background grid and axes
theme(legend.position = "bottom",
legend.title = element_blank())  # Removes legend title
plot.gg
## Generating Trajectory points
n = 1e4
k = 2
L = 40
eps = 0.2
temp_min = 1
mean1 <- c(0,0)
mean2 <- c(5,5)
# Current State with a new momentum sample
p <- rnorm(2)
qt <- matrix(0, nrow = L+1, ncol = k)
qt[1,] <- c(0, 0)
count <- 2
## Adding the point to the plot
plot.gg <- plot.gg + geom_point(aes(x = qt[1,1], y = qt[1,2]), size = 3, shape = 21, fill = "lightgreen")
plot.gg
## Temperatures
temps <- seq(
from = temp_min,
to = 1,
length = L/2)
# Taking the "Repulsive" steps
for(i in 1:length(temps)){
ret <- conformalLF(p,qt[count-1,],eps,temps[length(temps) - i + 1])
p <- ret[[1]]
qt[count,] <- ret[[2]]
count <- count + 1
}
# Taking the "Attractive" steps
for(i in 1:length(temps)){
ret <- conformalLF(p,qt[count-1,],eps,temps[i])
p <- ret[[1]]
qt[count,] <- ret[[2]]
count <- count + 1
}
# Making the final plot
plot.gg <- plot.gg +
geom_point(aes(x = qt[2:L+1,1], y = qt[2:L+1,2]), size = 3, shape = 21, fill = 1:count)+
geom_path(aes(x = qt[1:L+1,1], y = qt[1:L+1,2]), linewidth = 2,  color = "coral")
plot.gg
## Making the plot for the trajectory of the particle
# libraries
library(ggplot2)
# Code
source("Algorithm.R")
## Plotting the ground truth
density1 <- matrix(rnorm(2*5e4 , mean = 0), ncol = 2)
density2 <- matrix(rnorm(2*5e4 , mean = 5), ncol = 2)
density_df <- as.data.frame(rbind(density1, density2))
colnames(density_df) <- c("x", "y")
## Plotting the trajectory
plot.gg <- ggplot() +
stat_density_2d(data = density_df, aes(x = x, y = y, fill = after_stat(level)), geom = "polygon", alpha = 0.3) +
scale_fill_viridis_c(option = "magma") +
theme_void() +  # Removes background grid and axes
theme(legend.position = "bottom",
legend.title = element_blank())  # Removes legend title
plot.gg
## Generating Trajectory points
n = 1e4
k = 2
L = 40
eps = 0.2
temp_min = 1
mean1 <- c(0,0)
mean2 <- c(5,5)
# Current State with a new momentum sample
p <- rnorm(2)
qt <- matrix(0, nrow = L+1, ncol = k)
qt[1,] <- c(0, 0)
count <- 2
## Adding the point to the plot
plot.gg <- plot.gg + geom_point(aes(x = qt[1,1], y = qt[1,2]), size = 3, shape = 21, fill = "lightgreen")
plot.gg
## Temperatures
temps <- seq(
from = temp_min,
to = 1,
length = L/2)
# Taking the "Repulsive" steps
for(i in 1:length(temps)){
ret <- conformalLF(p,qt[count-1,],eps,temps[length(temps) - i + 1])
p <- ret[[1]]
qt[count,] <- ret[[2]]
count <- count + 1
}
# Taking the "Attractive" steps
for(i in 1:length(temps)){
ret <- conformalLF(p,qt[count-1,],eps,temps[i])
p <- ret[[1]]
qt[count,] <- ret[[2]]
count <- count + 1
}
# Making the final plot
plot.gg <- plot.gg +
geom_point(aes(x = qt[2:L+1,1], y = qt[2:L+1,2], fill = 1:count), size = 3, shape = 21)+
geom_path(aes(x = qt[1:L+1,1], y = qt[1:L+1,2]), linewidth = 2,  color = "coral")
plot.gg
count
length(qt[,1])
## Making the plot for the trajectory of the particle
# libraries
library(ggplot2)
# Code
source("Algorithm.R")
## Plotting the ground truth
density1 <- matrix(rnorm(2*5e4 , mean = 0), ncol = 2)
density2 <- matrix(rnorm(2*5e4 , mean = 5), ncol = 2)
density_df <- as.data.frame(rbind(density1, density2))
colnames(density_df) <- c("x", "y")
## Plotting the trajectory
plot.gg <- ggplot() +
stat_density_2d(data = density_df, aes(x = x, y = y, fill = after_stat(level)), geom = "polygon", alpha = 0.3) +
scale_fill_viridis_c(option = "magma") +
theme_void() +  # Removes background grid and axes
theme(legend.position = "bottom",
legend.title = element_blank())  # Removes legend title
plot.gg
## Generating Trajectory points
n = 1e4
k = 2
L = 40
eps = 0.2
temp_min = 1
mean1 <- c(0,0)
mean2 <- c(5,5)
# Current State with a new momentum sample
p <- rnorm(2)
qt <- matrix(0, nrow = L+1, ncol = k)
qt[1,] <- c(0, 0)
count <- 2
## Adding the point to the plot
plot.gg <- plot.gg + geom_point(aes(x = qt[1,1], y = qt[1,2]), size = 3, shape = 21, fill = "lightgreen")
plot.gg
## Temperatures
temps <- seq(
from = temp_min,
to = 1,
length = L/2)
# Taking the "Repulsive" steps
for(i in 1:length(temps)){
ret <- conformalLF(p,qt[count-1,],eps,temps[length(temps) - i + 1])
p <- ret[[1]]
qt[count,] <- ret[[2]]
count <- count + 1
}
# Taking the "Attractive" steps
for(i in 1:length(temps)){
ret <- conformalLF(p,qt[count-1,],eps,temps[i])
p <- ret[[1]]
qt[count,] <- ret[[2]]
count <- count + 1
}
# Making the final plot
plot.gg <- plot.gg +
geom_point(aes(x = qt[2:L+1,1], y = qt[2:L+1,2], fill = 1:count-1), size = 3, shape = 21)+
geom_path(aes(x = qt[1:L+1,1], y = qt[1:L+1,2]), linewidth = 2,  color = "coral")
plot.gg
## Making the plot for the trajectory of the particle
# libraries
library(ggplot2)
# Code
source("Algorithm.R")
## Plotting the ground truth
density1 <- matrix(rnorm(2*5e4 , mean = 0), ncol = 2)
density2 <- matrix(rnorm(2*5e4 , mean = 5), ncol = 2)
density_df <- as.data.frame(rbind(density1, density2))
colnames(density_df) <- c("x", "y")
## Plotting the trajectory
plot.gg <- ggplot() +
stat_density_2d(data = density_df, aes(x = x, y = y, fill = after_stat(level)), geom = "polygon", alpha = 0.3) +
scale_fill_viridis_c(option = "magma") +
theme_void() +  # Removes background grid and axes
theme(legend.position = "bottom",
legend.title = element_blank())  # Removes legend title
plot.gg
## Generating Trajectory points
n = 1e4
k = 2
L = 40
eps = 0.2
temp_min = 1
mean1 <- c(0,0)
mean2 <- c(5,5)
# Current State with a new momentum sample
p <- rnorm(2)
qt <- matrix(0, nrow = L+1, ncol = k)
qt[1,] <- c(0, 0)
count <- 2
## Adding the point to the plot
plot.gg <- plot.gg + geom_point(aes(x = qt[1,1], y = qt[1,2]), size = 3, shape = 21, fill = "lightgreen")
plot.gg
## Temperatures
temps <- seq(
from = temp_min,
to = 1,
length = L/2)
# Taking the "Repulsive" steps
for(i in 1:length(temps)){
ret <- conformalLF(p,qt[count-1,],eps,temps[length(temps) - i + 1])
p <- ret[[1]]
qt[count,] <- ret[[2]]
count <- count + 1
}
# Taking the "Attractive" steps
for(i in 1:length(temps)){
ret <- conformalLF(p,qt[count-1,],eps,temps[i])
p <- ret[[1]]
qt[count,] <- ret[[2]]
count <- count + 1
}
# Making the final plot
plot.gg <- plot.gg +
geom_point(aes(x = qt[2:L+1,1], y = qt[2:L+1,2]), size = 3, shape = 21, fill = "white")+
geom_path(aes(x = qt[1:L+1,1], y = qt[1:L+1,2]), linewidth = 2,  color = "coral")
plot.gg
## Generating Trajectory points
n = 1e4
k = 2
L = 10
eps = 0.1
temp_min = 1
mean1 <- c(0,0)
mean2 <- c(5,5)
# Current State with a new momentum sample
p <- rnorm(2)
qt <- matrix(0, nrow = L+1, ncol = k)
qt[1,] <- c(0, 0)
count <- 2
## Adding the point to the plot
plot.gg <- plot.gg + geom_point(aes(x = qt[1,1], y = qt[1,2]), size = 3, shape = 21, fill = "lightgreen")
plot.gg
## Temperatures
temps <- seq(
from = temp_min,
to = 1,
length = L/2)
# Taking the "Repulsive" steps
for(i in 1:length(temps)){
ret <- conformalLF(p,qt[count-1,],eps,temps[length(temps) - i + 1])
p <- ret[[1]]
qt[count,] <- ret[[2]]
count <- count + 1
}
# Taking the "Attractive" steps
for(i in 1:length(temps)){
ret <- conformalLF(p,qt[count-1,],eps,temps[i])
p <- ret[[1]]
qt[count,] <- ret[[2]]
count <- count + 1
}
# Making the final plot
plot.gg <- plot.gg +
geom_point(aes(x = qt[2:L+1,1], y = qt[2:L+1,2]), size = 3, shape = 21, fill = "white")+
geom_path(aes(x = qt[1:L+1,1], y = qt[1:L+1,2]), linewidth = 2,  color = "coral")
plot.gg
## Generating Trajectory points
n = 1e4
k = 2
L = 20
eps = 0.1
temp_min = 1
mean1 <- c(0,0)
mean2 <- c(5,5)
# Current State with a new momentum sample
p <- rnorm(2)
qt <- matrix(0, nrow = L+1, ncol = k)
qt[1,] <- c(0, 0)
count <- 2
## Adding the point to the plot
plot.gg <- plot.gg + geom_point(aes(x = qt[1,1], y = qt[1,2]), size = 3, shape = 21, fill = "lightgreen")
plot.gg
## Temperatures
temps <- seq(
from = temp_min,
to = 1,
length = L/2)
# Taking the "Repulsive" steps
for(i in 1:length(temps)){
ret <- conformalLF(p,qt[count-1,],eps,temps[length(temps) - i + 1])
p <- ret[[1]]
qt[count,] <- ret[[2]]
count <- count + 1
}
# Taking the "Attractive" steps
for(i in 1:length(temps)){
ret <- conformalLF(p,qt[count-1,],eps,temps[i])
p <- ret[[1]]
qt[count,] <- ret[[2]]
count <- count + 1
}
# Making the final plot
plot.gg <- plot.gg +
geom_point(aes(x = qt[2:L+1,1], y = qt[2:L+1,2]), size = 3, shape = 21, fill = "white")+
geom_path(aes(x = qt[1:L+1,1], y = qt[1:L+1,2]), linewidth = 2,  color = "coral")
plot.gg
## Generating Trajectory points
n = 1e4
k = 2
L = 20
eps = 0.2
temp_min = 1
mean1 <- c(0,0)
mean2 <- c(5,5)
# Current State with a new momentum sample
p <- rnorm(2)
qt <- matrix(0, nrow = L+1, ncol = k)
qt[1,] <- c(0, 0)
count <- 2
## Adding the point to the plot
plot.gg <- plot.gg + geom_point(aes(x = qt[1,1], y = qt[1,2]), size = 3, shape = 21, fill = "lightgreen")
plot.gg
## Temperatures
temps <- seq(
from = temp_min,
to = 1,
length = L/2)
# Taking the "Repulsive" steps
for(i in 1:length(temps)){
ret <- conformalLF(p,qt[count-1,],eps,temps[length(temps) - i + 1])
p <- ret[[1]]
qt[count,] <- ret[[2]]
count <- count + 1
}
# Taking the "Attractive" steps
for(i in 1:length(temps)){
ret <- conformalLF(p,qt[count-1,],eps,temps[i])
p <- ret[[1]]
qt[count,] <- ret[[2]]
count <- count + 1
}
# Making the final plot
plot.gg <- plot.gg +
geom_point(aes(x = qt[2:L+1,1], y = qt[2:L+1,2]), size = 3, shape = 21, fill = "white")+
geom_path(aes(x = qt[1:L+1,1], y = qt[1:L+1,2]), linewidth = 2,  color = "coral")
plot.gg
## Generating Trajectory points
n = 1e4
k = 2
L = 20
eps = 0.2
temp_min = 1
mean1 <- c(0,0)
mean2 <- c(5,5)
# Current State with a new momentum sample
p <- rnorm(2)
qt <- matrix(0, nrow = L+1, ncol = k)
qt[1,] <- c(0, 0)
count <- 2
## Adding the point to the plot
plot.gg <- plot.gg + geom_point(aes(x = qt[1,1], y = qt[1,2]), size = 3, shape = 21, fill = "lightgreen")
plot.gg
## Temperatures
temps <- seq(
from = temp_min,
to = 1,
length = L/2)
# Taking the "Repulsive" steps
for(i in 1:length(temps)){
ret <- conformalLF(p,qt[count-1,],eps,temps[length(temps) - i + 1])
p <- ret[[1]]
qt[count,] <- ret[[2]]
count <- count + 1
}
# Taking the "Attractive" steps
for(i in 1:length(temps)){
ret <- conformalLF(p,qt[count-1,],eps,temps[i])
p <- ret[[1]]
qt[count,] <- ret[[2]]
count <- count + 1
}
# Making the final plot
plot.gg <- plot.gg +
geom_point(aes(x = qt[2:L+1,1], y = qt[2:L+1,2]), size = 3, shape = 21, fill = "white")+
geom_path(aes(x = qt[1:L+1,1], y = qt[1:L+1,2]), linewidth = 2,  color = "coral")
plot.gg
## Generating Trajectory points
n = 1e4
k = 2
L = 20
eps = 0.2
temp_min = 1
mean1 <- c(0,0)
mean2 <- c(5,5)
# Current State with a new momentum sample
p <- rnorm(2)
qt <- matrix(0, nrow = L+1, ncol = k)
qt[1,] <- c(.1, -1)
count <- 2
## Adding the point to the plot
plot.gg <- plot.gg + geom_point(aes(x = qt[1,1], y = qt[1,2]), size = 3, shape = 21, fill = "lightgreen")
plot.gg
## Temperatures
temps <- seq(
from = temp_min,
to = 1,
length = L/2)
# Taking the "Repulsive" steps
for(i in 1:length(temps)){
ret <- conformalLF(p,qt[count-1,],eps,temps[length(temps) - i + 1])
p <- ret[[1]]
qt[count,] <- ret[[2]]
count <- count + 1
}
# Taking the "Attractive" steps
for(i in 1:length(temps)){
ret <- conformalLF(p,qt[count-1,],eps,temps[i])
p <- ret[[1]]
qt[count,] <- ret[[2]]
count <- count + 1
}
# Making the final plot
plot.gg <- plot.gg +
geom_point(aes(x = qt[2:L+1,1], y = qt[2:L+1,2]), size = 3, shape = 21, fill = "white")+
geom_path(aes(x = qt[1:L+1,1], y = qt[1:L+1,2]), linewidth = 2,  color = "coral")
plot.gg
setwd("~/Course Work/SEM-6/MTH707/MTH707-MagneticHMC/Codes/Toy Example")
## Loading the algorithm
source("Algorithm.R")
## Making the chain
chain <- magnetic_HMC(N = 1e6)
# Trace Plots
plot.ts(chain)
## Density Plots
seq.x <- seq(-5,5, length = 1e4)
densities <- sapply(seq.x, dnorm)
par(mfrow = c(2,1))
for(i in 1:2){
plot(
density(chain[,i]),
col = "black",
type = "l",
main = paste("Density Plot for Component",i),
xlab = "",
ylab = "Density",
ylim = c(0,0.5))
lines(seq.x,
densities,
col = "red")
print(i)
}
## ACF Plots
acf(chain)
